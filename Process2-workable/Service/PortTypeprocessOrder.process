<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdlPfx="http://xmlns.example.com/1427538568925" xmlns:ns5="http://xmlns.tibco.com/body" xmlns:pfx="http://www.tibco.com/ns/no_namespace_schema_location/order.xsd" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:ns4="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:ns3="http://www.tibco.com/namespaces/tnt/plugins/mail" xmlns:pfx5="http://ws.apache.org/axis2" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx4="http://xmlns.example.com/1427540200367" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/googleapi.xsd" xmlns:pfx2="http://www.tibco.com/ns/no_namespace_schema_location/sendOrder.xsd">
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/order.xsd" schemaLocation="/order.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/sendOrder.xsd" schemaLocation="/sendOrder.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/googleapi.xsd" schemaLocation="/googleapi.xsd"/>
    <wsdl:import namespace="http://xmlns.example.com/1427538568925" location="/Service/project2.wsdl"/>
    <wsdl:import namespace="http://xmlns.example.com/1427540200367" location="/Service/project2-service0.serviceagent"/>
    <wsdl:import namespace="http://ws.apache.org/axis2"/>
    <wsdl:import namespace="http://ws.apache.org/axis2" location="/Service/GetCookingTime.wsdl"/>
    <pd:name>Service/PortTypeprocessOrder.process</pd:name>
    <pd:startName>Recieve orderInfo from COS</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="Recieve orderInfo from COS">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>56</pd:x>
        <pd:y>106</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>q.request.placeorder</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/JMS Connection.sharedjmscon</ConnectionReference>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>933</pd:endX>
    <pd:endY>236</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1427540200587</pd:targetNamespace>
    <pd:activity name="Parse XML">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>171</pd:x>
        <pd:y>102</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx:Order"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Recieve-orderInfo-from-COS/ns:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JMS Queue Sender">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>189</pd:x>
        <pd:y>257</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>q.update</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/JMS Connection.sharedjmscon</ConnectionReference>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <Body>
                    <xsl:value-of select="concat($Parse-XML/Order/customerId,$Parse-XML/Order/email,&quot;,&quot;,$Parse-XML/Order/phoneNumber,&quot;,&quot;,$Parse-XML/Order/restaurant/restaurantName)"/>
                </Body>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Send Mail">
        <pd:type>com.tibco.plugin.mail.MailPubActivity</pd:type>
        <pd:resourceType>ae.activities.MailActivityResource</pd:resourceType>
        <pd:x>800</pd:x>
        <pd:y>116</pd:y>
        <config>
            <newMimeSupport>true</newMimeSupport>
            <inputOutputVersion>5.2.0</inputOutputVersion>
            <host>smtpcorp.com:2525</host>
            <authenticate>true</authenticate>
            <useSsl>false</useSsl>
            <username>oyoyo19930814@gmail.com</username>
            <password>Yyx8581247383</password>
            <nonRFC822>false</nonRFC822>
            <ns0:ssl xmlns:ns0="http://www.tibco.com/xmlns/aemeta/services/2002">
                <ns0:strongCipherSuitesOnly>true</ns0:strongCipherSuitesOnly>
            </ns0:ssl>
            <InputHeaders>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </InputHeaders>
        </config>
        <pd:inputBindings>
            <ns3:mailActivityInput>
                <from>
                    <xsl:value-of select="&quot;oyoyo19930814@gmail.com&quot;"/>
                </from>
                <to>
                    <xsl:value-of select="$Parse-XML/Order/email"/>
                </to>
                <replyTo>
                    <xsl:value-of select="&quot;oyoyo19930814@gmail.com&quot;"/>
                </replyTo>
                <subject>
                    <xsl:value-of select="&quot;Online meal order invoice&quot;"/>
                </subject>
                <ns5:bodyElement>
                    <bodyText>
                        <xsl:value-of select="concat(&quot;Dear customer, &#xA;&#xA;You have ordered &quot;,tib:concat-sequence-format($Parse-XML/Order/restaurant/packages/package_name,&quot;, &quot;),&quot; from &quot;,$Parse-XML/Order/restaurant/restaurantName,&quot;. &#xA;&#xA;Your total payment is &quot;,$Parse-XML/Order/totalPrice,&quot; dollars.&#xA;&#xA;Thank you so much for choosing Food Bear!! Feel free to call our hotline at 85225105 if you have any concern.&#xA;&#xA;Best regards,&#xA;Food Bear&quot;)"/>
                    </bodyText>
                </ns5:bodyElement>
            </ns3:mailActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SOAPRequestReply-1">
        <pd:type>com.tibco.plugin.soap.SOAPSendReceiveActivity</pd:type>
        <pd:resourceType>ae.activities.SOAPSendReceiveUI</pd:resourceType>
        <pd:x>395</pd:x>
        <pd:y>215</pd:y>
        <config>
            <timeout>10</timeout>
            <soapAttachmentStyle>SwA</soapAttachmentStyle>
            <timeoutType>Seconds</timeoutType>
            <service>pfx5:GetCookingTime</service>
            <servicePort>GetCookingTimeHttpSoap11Endpoint</servicePort>
            <operation>generate</operation>
            <soapAction>urn:generate</soapAction>
            <endpointURL>http://localhost:8080/axis2/services/GetCookingTime.GetCookingTimeHttpSoap11Endpoint/</endpointURL>
            <authScheme>NONE</authScheme>
        </config>
        <pd:inputBindings>
            <inputMessage>
                <pfx5:generate>
                    <pfx5:args0>
                        <xsl:value-of select="$Parse-XML/Order/customerId"/>
                    </pfx5:args0>
                </pfx5:generate>
            </inputMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SOAPRequestReply-2">
        <pd:type>com.tibco.plugin.soap.SOAPSendReceiveActivity</pd:type>
        <pd:resourceType>ae.activities.SOAPSendReceiveUI</pd:resourceType>
        <pd:x>395</pd:x>
        <pd:y>333</pd:y>
        <config>
            <timeout>10</timeout>
            <soapAttachmentStyle>SwA</soapAttachmentStyle>
            <timeoutType>Seconds</timeoutType>
            <service>pfx5:GetCookingTime</service>
            <servicePort>GetCookingTimeHttpSoap11Endpoint</servicePort>
            <operation>generate</operation>
            <soapAction>urn:generate</soapAction>
            <endpointURL>http://localhost:8080/axis2/services/GetCookingTime.GetCookingTimeHttpSoap11Endpoint/</endpointURL>
            <authScheme>NONE</authScheme>
        </config>
        <pd:inputBindings>
            <inputMessage>
                <pfx5:generate>
                    <pfx5:args0>
                        <xsl:value-of select="$Parse-XML/Order/customerId"/>
                    </pfx5:args0>
                </pfx5:generate>
            </inputMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="SOAPRequestReply-3">
        <pd:type>com.tibco.plugin.soap.SOAPSendReceiveActivity</pd:type>
        <pd:resourceType>ae.activities.SOAPSendReceiveUI</pd:resourceType>
        <pd:x>390</pd:x>
        <pd:y>73</pd:y>
        <config>
            <timeout>10</timeout>
            <soapAttachmentStyle>SwA</soapAttachmentStyle>
            <timeoutType>Seconds</timeoutType>
            <service>pfx5:GetCookingTime</service>
            <servicePort>GetCookingTimeHttpSoap11Endpoint</servicePort>
            <operation>generate</operation>
            <soapAction>urn:generate</soapAction>
            <endpointURL>http://localhost:8080/axis2/services/GetCookingTime.GetCookingTimeHttpSoap11Endpoint/</endpointURL>
            <authScheme>NONE</authScheme>
        </config>
        <pd:inputBindings>
            <inputMessage>
                <pfx5:generate>
                    <pfx5:args0>
                        <xsl:value-of select="$Parse-XML/Order/customerId"/>
                    </pfx5:args0>
                </pfx5:generate>
            </inputMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse-XML-1">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>644</pd:x>
        <pd:y>59</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx3:DirectionsResponse"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Invoke-REST-API/ns2:RESTOutput/msg"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Java Code">
        <pd:type>com.tibco.plugin.java.JavaActivity</pd:type>
        <pd:resourceType>ae.javapalette.javaActivity</pd:resourceType>
        <pd:x>533</pd:x>
        <pd:y>169</pd:y>
        <config>
            <fileName>PortTypeprocessOrderJavaCode</fileName>
            <packageName>Service.PortTypeprocessOrder</packageName>
            <fullsource>package Service.PortTypeprocessOrder;
import java.util.*;
import java.io.*;
public class PortTypeprocessOrderJavaCode{
/****** START SET/GET METHOD, DO NOT MODIFY *****/
	protected String originalName = "";
	protected String postCode = "";
	protected String motifiedName = "";
	protected String countryPostCode = "";
	public String getoriginalName() {
		return originalName;
	}
	public void setoriginalName(String val) {
		originalName = val;
	}
	public String getpostCode() {
		return postCode;
	}
	public void setpostCode(String val) {
		postCode = val;
	}
	public String getmotifiedName() {
		return motifiedName;
	}
	public void setmotifiedName(String val) {
		motifiedName = val;
	}
	public String getcountryPostCode() {
		return countryPostCode;
	}
	public void setcountryPostCode(String val) {
		countryPostCode = val;
	}
/****** END SET/GET METHOD, DO NOT MODIFY *****/
	public PortTypeprocessOrderJavaCode() {
	}
	public void invoke() throws Exception {
/* Available Variables: DO NOT MODIFY
	In  : String originalName
	In  : String postCode
	Out : String motifiedName
	Out : String countryPostCode
* Available Variables: DO NOT MODIFY *****/

motifiedName=originalName.replaceAll(" ", "%20");
countryPostCode="Singapore%20"+postCode;}
}
</fullsource>
            <inputData>
                <row>
                    <fieldName>originalName</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
                <row>
                    <fieldName>postCode</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
            </inputData>
            <outputData>
                <row>
                    <fieldName>motifiedName</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
                <row>
                    <fieldName>countryPostCode</fieldName>
                    <fieldType>string</fieldType>
                    <fieldRequired>required</fieldRequired>
                </row>
            </outputData>
            <byteCode>
                <class>
                    <name>PortTypeprocessOrderJavaCode</name>
                    <byteCode>yv66vgAAADMAQAkADwApCQAPACoJAA8AKwkADwAsCgAQAC0IAC4IAC8IADAKADEAMgcAMwoACgAtCAA0CgAKADUKAAoANgcANwcAOAEADG9yaWdpbmFsTmFtZQEAEkxqYXZhL2xhbmcvU3RyaW5nOwEACHBvc3RDb2RlAQAMbW90aWZpZWROYW1lAQAPY291bnRyeVBvc3RDb2RlAQAPZ2V0b3JpZ2luYWxOYW1lAQAUKClMamF2YS9sYW5nL1N0cmluZzsBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQAPc2V0b3JpZ2luYWxOYW1lAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQALZ2V0cG9zdENvZGUBAAtzZXRwb3N0Q29kZQEAD2dldG1vdGlmaWVkTmFtZQEAD3NldG1vdGlmaWVkTmFtZQEAEmdldGNvdW50cnlQb3N0Q29kZQEAEnNldGNvdW50cnlQb3N0Q29kZQEABjxpbml0PgEAAygpVgEABmludm9rZQEACkV4Y2VwdGlvbnMHADkBAApTb3VyY2VGaWxlAQAhUG9ydFR5cGVwcm9jZXNzT3JkZXJKYXZhQ29kZS5qYXZhDAARABIMABMAEgwAFAASDAAVABIMACIAIwEAAAEAASABAAMlMjAHADoMADsAPAEAF2phdmEvbGFuZy9TdHJpbmdCdWlsZGVyAQAMU2luZ2Fwb3JlJTIwDAA9AD4MAD8AFwEAOVNlcnZpY2UvUG9ydFR5cGVwcm9jZXNzT3JkZXIvUG9ydFR5cGVwcm9jZXNzT3JkZXJKYXZhQ29kZQEAEGphdmEvbGFuZy9PYmplY3QBABNqYXZhL2xhbmcvRXhjZXB0aW9uAQAQamF2YS9sYW5nL1N0cmluZwEACnJlcGxhY2VBbGwBADgoTGphdmEvbGFuZy9TdHJpbmc7TGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvU3RyaW5nOwEABmFwcGVuZAEALShMamF2YS9sYW5nL1N0cmluZzspTGphdmEvbGFuZy9TdHJpbmdCdWlsZGVyOwEACHRvU3RyaW5nACEADwAQAAAABAAEABEAEgAAAAQAEwASAAAABAAUABIAAAAEABUAEgAAAAoAAQAWABcAAQAYAAAAHQABAAEAAAAFKrQAAbAAAAABABkAAAAGAAEAAAALAAEAGgAbAAEAGAAAACIAAgACAAAABiortQABsQAAAAEAGQAAAAoAAgAAAA4ABQAPAAEAHAAXAAEAGAAAAB0AAQABAAAABSq0AAKwAAAAAQAZAAAABgABAAAAEQABAB0AGwABABgAAAAiAAIAAgAAAAYqK7UAArEAAAABABkAAAAKAAIAAAAUAAUAFQABAB4AFwABABgAAAAdAAEAAQAAAAUqtAADsAAAAAEAGQAAAAYAAQAAABcAAQAfABsAAQAYAAAAIgACAAIAAAAGKiu1AAOxAAAAAQAZAAAACgACAAAAGgAFABsAAQAgABcAAQAYAAAAHQABAAEAAAAFKrQABLAAAAABABkAAAAGAAEAAAAdAAEAIQAbAAEAGAAAACIAAgACAAAABiortQAEsQAAAAEAGQAAAAoAAgAAACAABQAhAAEAIgAjAAEAGAAAAEkAAgABAAAAHSq3AAUqEga1AAEqEga1AAIqEga1AAMqEga1AASxAAAAAQAZAAAAGgAGAAAAIwAEAAYACgAHABAACAAWAAkAHAAkAAEAJAAjAAIAGAAAAEYABAABAAAAKioqtAABEgcSCLYACbUAAyq7AApZtwALEgy2AA0qtAACtgANtgAOtQAEsQAAAAEAGQAAAAoAAgAAAC0ADwAuACUAAAAEAAEAJgABACcAAAACACg=</byteCode>
                </class>
            </byteCode>
        </config>
        <pd:inputBindings>
            <javaCodeActivityInput>
                <originalName>
                    <xsl:value-of select="$Parse-XML/Order/restaurant/restaurantName"/>
                </originalName>
                <postCode>
                    <xsl:value-of select="$Parse-XML/Order/postcode"/>
                </postCode>
            </javaCodeActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Invoke REST API">
        <pd:type>com.tibco.plugin.json.activities.RestActivity</pd:type>
        <pd:resourceType>ae.activities.RestActivity</pd:resourceType>
        <pd:x>555</pd:x>
        <pd:y>304</pd:y>
        <config>
            <restMethodUI>GET</restMethodUI>
            <restResponseType>XML</restResponseType>
            <authChoiceUI>No Authentication</authChoiceUI>
            <restURI>https://maps.googleapis.com/maps/api/directions/xml</restURI>
            <restInputReferNode>
                <xsd:element name="Parameters">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Query" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="mode" type="xsd:string"/>
                                        <xsd:element name="destination" type="xsd:string"/>
                                        <xsd:element name="origin" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Header" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Body" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Form" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Text" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Binary" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:base64Binary" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Multipart" minOccurs="0" maxOccurs="unbounded">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="name" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="filename" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-id" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" minOccurs="0">
                                                        <xsd:complexType>
                                                            <xsd:choice>
                                                                <xsd:element name="binary" type="xsd:base64Binary"/>
                                                                <xsd:element name="text" type="xsd:string"/>
                                                                <xsd:element name="fileName" type="xsd:string"/>
                                                            </xsd:choice>
                                                        </xsd:complexType>
                                                    </xsd:element>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restInputReferNode>
            <restOutputReferNode>
                <xsd:element name="header">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Server" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Range" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Last-Modifie" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restOutputReferNode>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <ns2:Parameters>
                    <Query>
                        <mode>
                            <xsl:value-of select="&quot;walking&quot;"/>
                        </mode>
                        <destination>
                            <xsl:value-of select="$Java-Code/javaCodeActivityOutput/countryPostCode"/>
                        </destination>
                        <origin>
                            <xsl:value-of select="$Java-Code/javaCodeActivityOutput/motifiedName"/>
                        </origin>
                    </Query>
                </ns2:Parameters>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Send SMS">
        <pd:type>com.tibco.plugin.json.activities.RestActivity</pd:type>
        <pd:resourceType>ae.activities.RestActivity</pd:resourceType>
        <pd:x>722</pd:x>
        <pd:y>209</pd:y>
        <config>
            <restMethodUI>GET</restMethodUI>
            <restResponseType>Default</restResponseType>
            <authChoiceUI>No Authentication</authChoiceUI>
            <restURI>http://gateway.onewaysms.sg:10002/api.aspx</restURI>
            <restInputReferNode>
                <xsd:element name="Parameters">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Query" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="message" type="xsd:string"/>
                                        <xsd:element name="languagetype" type="xsd:string"/>
                                        <xsd:element name="senderid" type="xsd:string"/>
                                        <xsd:element name="mobileno" type="xsd:string"/>
                                        <xsd:element name="apipassword" type="xsd:string"/>
                                        <xsd:element name="apiusername" type="xsd:string"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Header" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Body" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Form" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Text" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Binary" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:base64Binary" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Multipart" minOccurs="0" maxOccurs="unbounded">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="name" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="filename" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-id" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" minOccurs="0">
                                                        <xsd:complexType>
                                                            <xsd:choice>
                                                                <xsd:element name="binary" type="xsd:base64Binary"/>
                                                                <xsd:element name="text" type="xsd:string"/>
                                                                <xsd:element name="fileName" type="xsd:string"/>
                                                            </xsd:choice>
                                                        </xsd:complexType>
                                                    </xsd:element>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restInputReferNode>
            <restOutputReferNode>
                <xsd:element name="header">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Server" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Range" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Last-Modifie" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restOutputReferNode>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInput>
                <ns2:Parameters>
                    <Query>
                        <message>
                            <xsl:value-of select="concat(&quot;Dear customer,&#xA;&#xA;Thanks for ordering from Food Bear. =)&#xA;&#xA;Your order will be ready in &quot;,$SOAPRequestReply-3/outputMessage/pfx5:generateResponse/pfx5:return,&quot; minutes.&#xA;Deliver time: &quot;,$Parse-XML-1/DirectionsResponse/route/leg/duration)"/>
                        </message>
                        <languagetype>
                            <xsl:value-of select="1"/>
                        </languagetype>
                        <senderid>
                            <xsl:value-of select="&quot;TEST&quot;"/>
                        </senderid>
                        <mobileno>
                            <xsl:value-of select="concat(&quot;65&quot;,$Parse-XML/Order/phoneNumber)"/>
                        </mobileno>
                        <apipassword>
                            <xsl:value-of select="&quot;APIGXXX0FQ8MGGXXX0&quot;"/>
                        </apipassword>
                        <apiusername>
                            <xsl:value-of select="&quot;APIGXXX0FQ8MG&quot;"/>
                        </apiusername>
                    </Query>
                </ns2:Parameters>
            </ns2:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Write File">
        <pd:type>com.tibco.plugin.file.FileWriteActivity</pd:type>
        <pd:resourceType>ae.activities.FileWriteActivity</pd:resourceType>
        <pd:x>715</pd:x>
        <pd:y>361</pd:y>
        <config>
            <encoding>text</encoding>
            <compressFile>None</compressFile>
        </config>
        <pd:inputBindings>
            <ns4:WriteActivityInputTextClass>
                <fileName>
                    <xsl:value-of select="&quot;C:\Users\t430-kya\Desktop\eiassignment\check.txt&quot;"/>
                </fileName>
                <textContent>
                    <xsl:value-of select="concat($SOAPRequestReply-1/outputMessage/pfx5:generateResponse/pfx5:return, $SOAPRequestReply-3/outputMessage/pfx5:generateResponse/pfx5:return,$SOAPRequestReply-2/outputMessage/pfx5:generateResponse/pfx5:return)"/>
                </textContent>
            </ns4:WriteActivityInputTextClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Recieve orderInfo from COS</pd:from>
        <pd:to>Parse XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse XML</pd:from>
        <pd:to>JMS Queue Sender</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Sender</pd:from>
        <pd:to>SOAPRequestReply-3</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16737895</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/Order/restaurant/restaurantName='singapore management university'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Sender</pd:from>
        <pd:to>SOAPRequestReply-2</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16737895</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>JMS Queue Sender</pd:from>
        <pd:to>SOAPRequestReply-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16737895</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Parse-XML/Order/restaurant/restaurantName='Popeyes Louisiana Kitchen (The Cathay)'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPRequestReply-2</pd:from>
        <pd:to>Java Code</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPRequestReply-1</pd:from>
        <pd:to>Java Code</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SOAPRequestReply-3</pd:from>
        <pd:to>Java Code</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Java Code</pd:from>
        <pd:to>Invoke REST API</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Invoke REST API</pd:from>
        <pd:to>Parse-XML-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse-XML-1</pd:from>
        <pd:to>Send Mail</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Send Mail</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Invoke REST API</pd:from>
        <pd:to>Write File</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>